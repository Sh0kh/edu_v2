scalar Upload

type Group {
    id: ID!
    name: String!
    teacherName: String!
    level: GroupLevel!
    createdAt: String!
}

enum GroupLevel {
    BEGINNER
    ELEMENTARY
    PRE_INTERMEDIATE
    INTERMEDIATE
    UPPER_INTERMEDIATE
    ADVANCED
    PROFICIENT
}

type Response {
    statusCode: Int!
    message: String!
}

type Collections {
    id :ID!
    title :String!
    imageUrl:String!
    createdAt:String!
}

type Query {
    getGroups(byId: ID, orderByLevel: Boolean): [Group!]
    getCollection(byId:ID):[Collections!]!
}


type Mutation {
    createCollection(name: String!, file: Upload): Response!
    updateCollection(id: ID!, name: String!): Response!
    deleteCollection(id: ID!): Response!
    createGroup(name: String!, teacherName: String!, level: GroupLevel!): Response!
    updateGroup(id: ID!, name: String!, teacherName: String!, level: GroupLevel!): Response!
    deleteGroup(id: ID!): Response!
}
