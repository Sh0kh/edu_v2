//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_e "encoding/xml";_g "fmt";_cf "github.com/unidoc/unioffice";_b "github.com/unidoc/unioffice/common/logger";_ea "regexp";);func (_bd *CT_Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_g .Sprintf ("\u0025\u0076",_bd .ExtensionAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_g .Sprintf ("\u0025\u0076",_bd .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_cbe *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_cbe .ExtensionAttr ){return _g .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_cbe .ExtensionAttr );
};if !ST_ContentTypePatternRe .MatchString (_cbe .ContentTypeAttr ){return _g .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_cbe .ContentTypeAttr );
};return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_cbf *CT_Types )ValidateWithPath (path string )error {for _dd ,_eff :=range _cbf .Default {if _fa :=_eff .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_dd ));_fa !=nil {return _fa ;
};};for _bde ,_fec :=range _cbf .Override {if _ag :=_fec .ValidateWithPath (_g .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_bde ));_ag !=nil {return _ag ;};};return nil ;};

// Validate validates the CT_Override and its children
func (_da *CT_Override )Validate ()error {return _da .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_fdc *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_fdc .ContentTypeAttr ){return _g .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_fdc .ContentTypeAttr );
};return nil ;};

// Validate validates the CT_Default and its children
func (_ce *CT_Default )Validate ()error {return _ce .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func (_bff *Default )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _bff .CT_Default .MarshalXML (e ,start );
};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_debb *Override )ValidateWithPath (path string )error {if _ced :=_debb .CT_Override .ValidateWithPath (path );_ced !=nil {return _ced ;};return nil ;};func (_bc *CT_Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_cfe :for {_gg ,_fdb :=d .Token ();
if _fdb !=nil {return _fdb ;};switch _ac :=_gg .(type ){case _e .StartElement :switch _ac .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_ca :=NewDefault ();
if _eea :=d .DecodeElement (_ca ,&_ac );_eea !=nil {return _eea ;};_bc .Default =append (_bc .Default ,_ca );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gga :=NewOverride ();
if _fg :=d .DecodeElement (_gga ,&_ac );_fg !=nil {return _fg ;};_bc .Override =append (_bc .Override ,_gga );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_ac .Name );
if _ga :=d .Skip ();_ga !=nil {return _ga ;};};case _e .EndElement :break _cfe ;case _e .CharData :};};return nil ;};

// Validate validates the Types and its children
func (_df *Types )Validate ()error {return _df .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};type Types struct{CT_Types };func (_bca *Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bca .CT_Default =*NewCT_Default ();for _ ,_cc :=range start .Attr {if _cc .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_dc ,_gff :=_cc .Value ,error (nil );
if _gff !=nil {return _gff ;};_bca .ExtensionAttr =_dc ;continue ;};if _cc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ccd ,_bb :=_cc .Value ,error (nil );if _bb !=nil {return _bb ;};_bca .ContentTypeAttr =_ccd ;continue ;
};};for {_eeb ,_bfa :=d .Token ();if _bfa !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_bfa );};if _cee ,_acb :=_eeb .(_e .EndElement );_acb &&_cee .Name ==start .Name {break ;
};};return nil ;};func (_cff *CT_Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_cff .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_gc :=range start .Attr {if _gc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_de ,_deg :=_gc .Value ,error (nil );
if _deg !=nil {return _deg ;};_cff .ContentTypeAttr =_de ;continue ;};if _gc .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_efc ,_af :=_gc .Value ,error (nil );if _af !=nil {return _af ;};_cff .PartNameAttr =_efc ;continue ;};};for {_eb ,_ae :=d .Token ();
if _ae !=nil {return _g .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_ae );};if _deb ,_eg :=_eb .(_e .EndElement );_eg &&_deb .Name ==start .Name {break ;};};
return nil ;};type Override struct{CT_Override };type Default struct{CT_Default };

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_efd *Default )ValidateWithPath (path string )error {if _gec :=_efd .CT_Default .ValidateWithPath (path );_gec !=nil {return _gec ;};return nil ;};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";
func NewOverride ()*Override {_acbg :=&Override {};_acbg .CT_Override =*NewCT_Override ();return _acbg ;};func (_def *Types )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_def .CT_Types =*NewCT_Types ();_ace :for {_cg ,_bae :=d .Token ();
if _bae !=nil {return _bae ;};switch _fdg :=_cg .(type ){case _e .StartElement :switch _fdg .Name {case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_gb :=NewDefault ();
if _gab :=d .DecodeElement (_gb ,&_fdg );_gab !=nil {return _gab ;};_def .Default =append (_def .Default ,_gb );case _e .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_ecd :=NewOverride ();
if _ega :=d .DecodeElement (_ecd ,&_fdg );_ega !=nil {return _ega ;};_def .Override =append (_def .Override ,_ecd );default:_b .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_fdg .Name );
if _cca :=d .Skip ();_cca !=nil {return _cca ;};};case _e .EndElement :break _ace ;case _e .CharData :};};return nil ;};func (_cfa *CT_Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_g .Sprintf ("\u0025\u0076",_cfa .ContentTypeAttr )});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_g .Sprintf ("\u0025\u0076",_cfa .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });
return nil ;};

// Validate validates the Default and its children
func (_cdg *Default )Validate ()error {return _cdg .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// Validate validates the CT_Types and its children
func (_ebe *CT_Types )Validate ()error {return _ebe .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_cfc *Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});
start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0054\u0079\u0070e\u0073";return _cfc .CT_Types .MarshalXML (e ,start );};func (_bgd *Override )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_bgd .CT_Override =*NewCT_Override ();for _ ,_aea :=range start .Attr {if _aea .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fge ,_dcf :=_aea .Value ,error (nil );
if _dcf !=nil {return _dcf ;};_bgd .ContentTypeAttr =_fge ;continue ;};if _aea .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_eba ,_gfb :=_aea .Value ,error (nil );if _gfb !=nil {return _gfb ;};_bgd .PartNameAttr =_eba ;continue ;};
};for {_gef ,_ad :=d .Token ();if _ad !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_ad );};if _ba ,_dacd :=_gef .(_e .EndElement );_dacd &&_ba .Name ==start .Name {break ;};
};return nil ;};func NewCT_Override ()*CT_Override {_ab :=&CT_Override {};_ab .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _ab ;};type CT_Types struct{Default []*Default ;Override []*Override ;
};func (_f *CT_Default )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_f .ExtensionAttr ="\u0078\u006d\u006c";_f .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_fd :=range start .Attr {if _fd .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_ec ,_gf :=_fd .Value ,error (nil );
if _gf !=nil {return _gf ;};_f .ExtensionAttr =_ec ;continue ;};if _fd .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_a ,_cb :=_fd .Value ,error (nil );if _cb !=nil {return _cb ;};_f .ContentTypeAttr =_a ;continue ;};};
for {_ed ,_ee :=d .Token ();if _ee !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ee );};if _d ,_bf :=_ed .(_e .EndElement );_bf &&_d .Name ==start .Name {break ;
};};return nil ;};var ST_ExtensionPatternRe =_ea .MustCompile (ST_ExtensionPattern );func NewTypes ()*Types {_cdb :=&Types {};_cdb .CT_Types =*NewCT_Types ();return _cdb };type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func NewDefault ()*Default {_gd :=&Default {};
_gd .CT_Default =*NewCT_Default ();return _gd };func (_dg *Override )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {return _dg .CT_Override .MarshalXML (e ,start );};func NewCT_Default ()*CT_Default {_bg :=&CT_Default {};_bg .ExtensionAttr ="\u0078\u006d\u006c";
_bg .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _bg ;};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_fde *Types )ValidateWithPath (path string )error {if _abc :=_fde .CT_Types .ValidateWithPath (path );_abc !=nil {return _abc ;};return nil ;};func NewCT_Types ()*CT_Types {_fe :=&CT_Types {};return _fe };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";


// Validate validates the Override and its children
func (_fgd *Override )Validate ()error {return _fgd .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};var ST_ContentTypePatternRe =_ea .MustCompile (ST_ContentTypePattern );func (_dac *CT_Types )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );
if _dac .Default !=nil {_egd :=_e .StartElement {Name :_e .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_eda :=range _dac .Default {e .EncodeElement (_eda ,_egd );};};if _dac .Override !=nil {_ge :=_e .StartElement {Name :_e .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};
for _ ,_dab :=range _dac .Override {e .EncodeElement (_dab ,_ge );};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func init (){_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );
_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );
_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );
_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );
_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );
_cf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );
};