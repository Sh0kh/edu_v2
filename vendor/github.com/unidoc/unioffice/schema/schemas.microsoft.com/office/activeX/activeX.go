//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package activeX ;import (_c "encoding/xml";_cd "fmt";_fg "github.com/unidoc/unioffice";_b "github.com/unidoc/unioffice/common/logger";);type CT_OcxPrChoice struct{Font *CT_Font ;Picture *CT_Picture ;};const (ST_PersistenceUnset ST_Persistence =0;ST_PersistencePersistPropertyBag ST_Persistence =1;
ST_PersistencePersistStream ST_Persistence =2;ST_PersistencePersistStreamInit ST_Persistence =3;ST_PersistencePersistStorage ST_Persistence =4;);func (_agcc ST_Persistence )Validate ()error {return _agcc .ValidateWithPath ("")};func (_cccg ST_Persistence )ValidateWithPath (path string )error {switch _cccg {case 0,1,2,3,4:default:return _cd .Errorf ("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d",path ,int (_cccg ));
};return nil ;};func (_fe *CT_OcxPr )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0061x\u003a\u006e\u0061\u006d\u0065"},Value :_cd .Sprintf ("\u0025\u0076",_fe .NameAttr )});
if _fe .ValueAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0061\u0078\u003a\u0076\u0061\u006c\u0075\u0065"},Value :_cd .Sprintf ("\u0025\u0076",*_fe .ValueAttr )});};e .EncodeToken (start );if _fe .Choice !=nil {_fe .Choice .MarshalXML (e ,_c .StartElement {});
};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func NewCT_Picture ()*CT_Picture {_egc :=&CT_Picture {};return _egc };func (_dgda ST_Persistence )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {return e .EncodeElement (_dgda .String (),start );
};func (_bed *ST_Persistence )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_dbf ,_ege :=d .Token ();if _ege !=nil {return _ege ;};if _fafc ,_gab :=_dbf .(_c .EndElement );_gab &&_fafc .Name ==start .Name {*_bed =1;return nil ;};if _efb ,_gcbg :=_dbf .(_c .CharData );
!_gcbg {return _cd .Errorf ("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054",_dbf );}else {switch string (_efb ){case "":*_bed =0;case "\u0070e\u0072s\u0069\u0073\u0074\u0050\u0072o\u0070\u0065r\u0074\u0079\u0042\u0061\u0067":*_bed =1;
case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061\u006d":*_bed =2;case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061m\u0049\u006e\u0069\u0074":*_bed =3;case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074o\u0072\u0061\u0067\u0065":*_bed =4;
};};_dbf ,_ege =d .Token ();if _ege !=nil {return _ege ;};if _aad ,_afb :=_dbf .(_c .EndElement );_afb &&_aad .Name ==start .Name {return nil ;};return _cd .Errorf ("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076",_dbf );
};func (_dg *CT_Ocx )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_dg .PersistenceAttr =ST_Persistence (1);for _ ,_bgd :=range start .Attr {if _bgd .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"&&_bgd .Name .Local =="\u0069\u0064"||_bgd .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073"&&_bgd .Name .Local =="\u0069\u0064"{_acc ,_baa :=_bgd .Value ,error (nil );
if _baa !=nil {return _baa ;};_dg .IdAttr =&_acc ;continue ;};if _bgd .Name .Local =="\u0063l\u0061\u0073\u0073\u0069\u0064"{_gf ,_cf :=_bgd .Value ,error (nil );if _cf !=nil {return _cf ;};_dg .ClassidAttr =_gf ;continue ;};if _bgd .Name .Local =="\u006ci\u0063\u0065\u006e\u0073\u0065"{_agc ,_gd :=_bgd .Value ,error (nil );
if _gd !=nil {return _gd ;};_dg .LicenseAttr =&_agc ;continue ;};if _bgd .Name .Local =="p\u0065\u0072\u0073\u0069\u0073\u0074\u0065\u006e\u0063\u0065"{_dg .PersistenceAttr .UnmarshalXMLAttr (_bgd );continue ;};};_dc :for {_ce ,_bbee :=d .Token ();if _bbee !=nil {return _bbee ;
};switch _db :=_ce .(type ){case _c .StartElement :switch _db .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u006f\u0063\u0078P\u0072"}:_caf :=NewCT_OcxPr ();
if _fb :=d .DecodeElement (_caf ,&_db );_fb !=nil {return _fb ;};_dg .OcxPr =append (_dg .OcxPr ,_caf );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0063\u0078\u0020\u0025\u0076",_db .Name );
if _eg :=d .Skip ();_eg !=nil {return _eg ;};};case _c .EndElement :break _dc ;case _c .CharData :};};return nil ;};

// ValidateWithPath validates the CT_OcxPrChoice and its children, prefixing error messages with path
func (_cda *CT_OcxPrChoice )ValidateWithPath (path string )error {if _cda .Font !=nil {if _cga :=_cda .Font .ValidateWithPath (path +"\u002f\u0046\u006fn\u0074");_cga !=nil {return _cga ;};};if _cda .Picture !=nil {if _gdg :=_cda .Picture .ValidateWithPath (path +"\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065");
_gdg !=nil {return _gdg ;};};return nil ;};

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_gca *CT_Picture )ValidateWithPath (path string )error {return nil };func (_be *CT_OcxPr )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_efg :=range start .Attr {if _efg .Name .Local =="\u006e\u0061\u006d\u0065"{_egg ,_bc :=_efg .Value ,error (nil );
if _bc !=nil {return _bc ;};_be .NameAttr =_egg ;continue ;};if _efg .Name .Local =="\u0076\u0061\u006cu\u0065"{_ed ,_ega :=_efg .Value ,error (nil );if _ega !=nil {return _ega ;};_be .ValueAttr =&_ed ;continue ;};};_acd :for {_gae ,_faf :=d .Token ();
if _faf !=nil {return _faf ;};switch _ec :=_gae .(type ){case _c .StartElement :switch _ec .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u0066\u006f\u006e\u0074"}:_be .Choice =NewCT_OcxPrChoice ();
if _fae :=d .DecodeElement (&_be .Choice .Font ,&_ec );_fae !=nil {return _fae ;};case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u0070i\u0063\u0074\u0075\u0072\u0065"}:_be .Choice =NewCT_OcxPrChoice ();
if _aca :=d .DecodeElement (&_be .Choice .Picture ,&_ec );_aca !=nil {return _aca ;};default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0063\u0078\u0050\u0072\u0020\u0025\u0076",_ec .Name );
if _dgd :=d .Skip ();_dgd !=nil {return _dgd ;};};case _c .EndElement :break _acd ;case _c .CharData :};};return nil ;};func NewCT_OcxPrChoice ()*CT_OcxPrChoice {_af :=&CT_OcxPrChoice {};return _af };func (_efe *CT_OcxPrChoice )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cb :for {_bgeb ,_cef :=d .Token ();
if _cef !=nil {return _cef ;};switch _gdf :=_bgeb .(type ){case _c .StartElement :switch _gdf .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u0066\u006f\u006e\u0074"}:_efe .Font =NewCT_Font ();
if _bdg :=d .DecodeElement (_efe .Font ,&_gdf );_bdg !=nil {return _bdg ;};case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u0070i\u0063\u0074\u0075\u0072\u0065"}:_efe .Picture =NewCT_Picture ();
if _cag :=d .DecodeElement (_efe .Picture ,&_gdf );_cag !=nil {return _cag ;};default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0063\u0078\u0050\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076",_gdf .Name );
if _fba :=d .Skip ();_fba !=nil {return _fba ;};};case _c .EndElement :break _cb ;case _c .CharData :};};return nil ;};func NewCT_Ocx ()*CT_Ocx {_ac :=&CT_Ocx {};_ac .PersistenceAttr =ST_Persistence (1);return _ac };type Ocx struct{CT_Ocx };

// Validate validates the CT_Ocx and its children
func (_fcd *CT_Ocx )Validate ()error {return _fcd .ValidateWithPath ("\u0043\u0054\u005f\u004f\u0063\u0078");};func (_bcc ST_Persistence )String ()string {switch _bcc {case 0:return "";case 1:return "\u0070e\u0072s\u0069\u0073\u0074\u0050\u0072o\u0070\u0065r\u0074\u0079\u0042\u0061\u0067";
case 2:return "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061\u006d";case 3:return "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061m\u0049\u006e\u0069\u0074";case 4:return "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074o\u0072\u0061\u0067\u0065";
};return "";};

// ValidateWithPath validates the CT_OcxPr and its children, prefixing error messages with path
func (_cfb *CT_OcxPr )ValidateWithPath (path string )error {if _cfb .Choice !=nil {if _cfa :=_cfb .Choice .ValidateWithPath (path +"\u002fC\u0068\u006f\u0069\u0063\u0065");_cfa !=nil {return _cfa ;};};return nil ;};func (_ga *CT_Ocx )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0061\u0078\u003a\u0063\u006c\u0061\u0073\u0073\u0069\u0064"},Value :_cd .Sprintf ("\u0025\u0076",_ga .ClassidAttr )});
if _ga .LicenseAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0061\u0078\u003a\u006c\u0069\u0063\u0065\u006e\u0073\u0065"},Value :_cd .Sprintf ("\u0025\u0076",*_ga .LicenseAttr )});};if _ga .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0072\u003a\u0069\u0064"},Value :_cd .Sprintf ("\u0025\u0076",*_ga .IdAttr )});
};_ead ,_gg :=_ga .PersistenceAttr .MarshalXMLAttr (_c .Name {Local :"\u0061\u0078\u003a\u0070\u0065\u0072\u0073\u0069\u0073t\u0065\u006e\u0063\u0065"});if _gg !=nil {return _gg ;};start .Attr =append (start .Attr ,_ead );e .EncodeToken (start );if _ga .OcxPr !=nil {_d :=_c .StartElement {Name :_c .Name {Local :"\u0061\u0078\u003a\u006f\u0063\u0078\u0050\u0072"}};
for _ ,_ef :=range _ga .OcxPr {e .EncodeElement (_ef ,_d );};};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};type CT_OcxPr struct{NameAttr string ;ValueAttr *string ;Choice *CT_OcxPrChoice ;};func NewOcx ()*Ocx {_age :=&Ocx {};_age .CT_Ocx =*NewCT_Ocx ();
return _age };func (_dcg *CT_OcxPrChoice )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _dcg .Font !=nil {_fef :=_c .StartElement {Name :_c .Name {Local :"\u0061x\u003a\u0066\u006f\u006e\u0074"}};e .EncodeElement (_dcg .Font ,_fef );};if _dcg .Picture !=nil {_dbb :=_c .StartElement {Name :_c .Name {Local :"\u0061\u0078\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}};
e .EncodeElement (_dcg .Picture ,_dbb );};return nil ;};func (_dgc *Ocx )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0061\u0078"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0072"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"});
start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0061\u0078\u003a\u006f\u0063\u0078";return _dgc .CT_Ocx .MarshalXML (e ,start );};

// Validate validates the Ocx and its children
func (_gfb *Ocx )Validate ()error {return _gfb .ValidateWithPath ("\u004f\u0063\u0078")};func (_acaf *ST_Persistence )UnmarshalXMLAttr (attr _c .Attr )error {switch attr .Value {case "":*_acaf =0;case "\u0070e\u0072s\u0069\u0073\u0074\u0050\u0072o\u0070\u0065r\u0074\u0079\u0042\u0061\u0067":*_acaf =1;
case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061\u006d":*_acaf =2;case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061m\u0049\u006e\u0069\u0074":*_acaf =3;case "\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074o\u0072\u0061\u0067\u0065":*_acaf =4;
};return nil ;};

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_ea *CT_Font )ValidateWithPath (path string )error {if _gc :=_ea .PersistenceAttr .ValidateWithPath (path +"\u002f\u0050e\u0072\u0073\u0069s\u0074\u0065\u006e\u0063\u0065\u0041\u0074\u0074\u0072");_gc !=nil {return _gc ;};for _ag ,_bd :=range _ea .OcxPr {if _bfb :=_bd .ValidateWithPath (_cd .Sprintf ("\u0025\u0073\u002fO\u0063\u0078\u0050\u0072\u005b\u0025\u0064\u005d",path ,_ag ));
_bfb !=nil {return _bfb ;};};return nil ;};type ST_Persistence byte ;

// Validate validates the CT_Font and its children
func (_fca *CT_Font )Validate ()error {return _fca .ValidateWithPath ("\u0043T\u005f\u0046\u006f\u006e\u0074");};

// ValidateWithPath validates the Ocx and its children, prefixing error messages with path
func (_eebd *Ocx )ValidateWithPath (path string )error {if _fee :=_eebd .CT_Ocx .ValidateWithPath (path );_fee !=nil {return _fee ;};return nil ;};func (_cee ST_Persistence )MarshalXMLAttr (name _c .Name )(_c .Attr ,error ){_agg :=_c .Attr {};_agg .Name =name ;
switch _cee {case ST_PersistenceUnset :_agg .Value ="";case ST_PersistencePersistPropertyBag :_agg .Value ="\u0070e\u0072s\u0069\u0073\u0074\u0050\u0072o\u0070\u0065r\u0074\u0079\u0042\u0061\u0067";case ST_PersistencePersistStream :_agg .Value ="\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061\u006d";
case ST_PersistencePersistStreamInit :_agg .Value ="\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074\u0072\u0065\u0061m\u0049\u006e\u0069\u0074";case ST_PersistencePersistStorage :_agg .Value ="\u0070\u0065\u0072\u0073\u0069\u0073\u0074\u0053\u0074o\u0072\u0061\u0067\u0065";
};return _agg ,nil ;};func (_dbd *CT_Picture )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _dbd .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0072\u003a\u0069\u0064"},Value :_cd .Sprintf ("\u0025\u0076",*_dbd .IdAttr )});
};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};type CT_Font struct{PersistenceAttr ST_Persistence ;IdAttr *string ;OcxPr []*CT_OcxPr ;};func NewCT_OcxPr ()*CT_OcxPr {_gbd :=&CT_OcxPr {};return _gbd };func (_bf *CT_Font )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _bf .PersistenceAttr !=ST_PersistenceUnset {_fa ,_a :=_bf .PersistenceAttr .MarshalXMLAttr (_c .Name {Local :"\u0061\u0078\u003a\u0070\u0065\u0072\u0073\u0069\u0073t\u0065\u006e\u0063\u0065"});
if _a !=nil {return _a ;};start .Attr =append (start .Attr ,_fa );};if _bf .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0072\u003a\u0069\u0064"},Value :_cd .Sprintf ("\u0025\u0076",*_bf .IdAttr )});};e .EncodeToken (start );
if _bf .OcxPr !=nil {_bg :=_c .StartElement {Name :_c .Name {Local :"\u0061\u0078\u003a\u006f\u0063\u0078\u0050\u0072"}};for _ ,_ge :=range _bf .OcxPr {e .EncodeElement (_ge ,_bg );};};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};
func NewCT_Font ()*CT_Font {_bb :=&CT_Font {};return _bb };

// Validate validates the CT_OcxPrChoice and its children
func (_ff *CT_OcxPrChoice )Validate ()error {return _ff .ValidateWithPath ("\u0043\u0054\u005f\u004f\u0063\u0078\u0050\u0072\u0043h\u006f\u0069\u0063\u0065");};type CT_Picture struct{IdAttr *string ;};

// Validate validates the CT_OcxPr and its children
func (_fbe *CT_OcxPr )Validate ()error {return _fbe .ValidateWithPath ("\u0043\u0054\u005f\u004f\u0063\u0078\u0050\u0072");};

// Validate validates the CT_Picture and its children
func (_gcb *CT_Picture )Validate ()error {return _gcb .ValidateWithPath ("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065");};func (_eba *Ocx )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_eba .CT_Ocx =*NewCT_Ocx ();for _ ,_cgf :=range start .Attr {if _cgf .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"&&_cgf .Name .Local =="\u0069\u0064"||_cgf .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073"&&_cgf .Name .Local =="\u0069\u0064"{_fdb ,_bgdd :=_cgf .Value ,error (nil );
if _bgdd !=nil {return _bgdd ;};_eba .IdAttr =&_fdb ;continue ;};if _cgf .Name .Local =="\u0063l\u0061\u0073\u0073\u0069\u0064"{_de ,_fgg :=_cgf .Value ,error (nil );if _fgg !=nil {return _fgg ;};_eba .ClassidAttr =_de ;continue ;};if _cgf .Name .Local =="\u006ci\u0063\u0065\u006e\u0073\u0065"{_bgb ,_ae :=_cgf .Value ,error (nil );
if _ae !=nil {return _ae ;};_eba .LicenseAttr =&_bgb ;continue ;};if _cgf .Name .Local =="p\u0065\u0072\u0073\u0069\u0073\u0074\u0065\u006e\u0063\u0065"{_eba .PersistenceAttr .UnmarshalXMLAttr (_cgf );continue ;};};_cafc :for {_eaf ,_dge :=d .Token ();
if _dge !=nil {return _dge ;};switch _acdb :=_eaf .(type ){case _c .StartElement :switch _acdb .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u006f\u0063\u0078P\u0072"}:_cfbb :=NewCT_OcxPr ();
if _egf :=d .DecodeElement (_cfbb ,&_acdb );_egf !=nil {return _egf ;};_eba .OcxPr =append (_eba .OcxPr ,_cfbb );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u004fc\u0078\u0020\u0025\u0076",_acdb .Name );
if _dcf :=d .Skip ();_dcf !=nil {return _dcf ;};};case _c .EndElement :break _cafc ;case _c .CharData :};};return nil ;};func (_bfa *CT_Picture )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_cgc :=range start .Attr {if _cgc .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"&&_cgc .Name .Local =="\u0069\u0064"||_cgc .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073"&&_cgc .Name .Local =="\u0069\u0064"{_cgab ,_ab :=_cgc .Value ,error (nil );
if _ab !=nil {return _ab ;};_bfa .IdAttr =&_cgab ;continue ;};};for {_bdc ,_da :=d .Token ();if _da !=nil {return _cd .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u003a\u0020%\u0073",_da );
};if _gbf ,_bfg :=_bdc .(_c .EndElement );_bfg &&_gbf .Name ==start .Name {break ;};};return nil ;};func (_bge *CT_Font )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_fc :=range start .Attr {if _fc .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"&&_fc .Name .Local =="\u0069\u0064"||_fc .Name .Space =="\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073"&&_fc .Name .Local =="\u0069\u0064"{_fgb ,_ba :=_fc .Value ,error (nil );
if _ba !=nil {return _ba ;};_bge .IdAttr =&_fgb ;continue ;};if _fc .Name .Local =="p\u0065\u0072\u0073\u0069\u0073\u0074\u0065\u006e\u0063\u0065"{_bge .PersistenceAttr .UnmarshalXMLAttr (_fc );continue ;};};_e :for {_fd ,_ee :=d .Token ();if _ee !=nil {return _ee ;
};switch _gb :=_fd .(type ){case _c .StartElement :switch _gb .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058",Local :"\u006f\u0063\u0078P\u0072"}:_cdf :=NewCT_OcxPr ();
if _bbe :=d .DecodeElement (_cdf ,&_gb );_bbe !=nil {return _bbe ;};_bge .OcxPr =append (_bge .OcxPr ,_cdf );default:_b .Log .Debug ("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076",_gb .Name );
if _ca :=d .Skip ();_ca !=nil {return _ca ;};};case _c .EndElement :break _e ;case _c .CharData :};};return nil ;};

// ValidateWithPath validates the CT_Ocx and its children, prefixing error messages with path
func (_egb *CT_Ocx )ValidateWithPath (path string )error {if _egb .PersistenceAttr ==ST_PersistenceUnset {return _cd .Errorf ("\u0025\u0073\u002f\u0050\u0065\u0072\u0073\u0069\u0073\u0074\u0065\u006e\u0063e\u0041\u0074\u0074\u0072\u0020\u0069s\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064",path );
};if _aa :=_egb .PersistenceAttr .ValidateWithPath (path +"\u002f\u0050e\u0072\u0073\u0069s\u0074\u0065\u006e\u0063\u0065\u0041\u0074\u0074\u0072");_aa !=nil {return _aa ;};for _accc ,_eb :=range _egb .OcxPr {if _ccc :=_eb .ValidateWithPath (_cd .Sprintf ("\u0025\u0073\u002fO\u0063\u0078\u0050\u0072\u005b\u0025\u0064\u005d",path ,_accc ));
_ccc !=nil {return _ccc ;};};return nil ;};type CT_Ocx struct{ClassidAttr string ;LicenseAttr *string ;IdAttr *string ;PersistenceAttr ST_Persistence ;OcxPr []*CT_OcxPr ;};func init (){_fg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058","\u0043\u0054\u005f\u004f\u0063\u0078",NewCT_Ocx );
_fg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058","\u0043\u0054\u005f\u004f\u0063\u0078\u0050\u0072",NewCT_OcxPr );
_fg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058","\u0043T\u005f\u0046\u006f\u006e\u0074",NewCT_Font );
_fg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058","\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065",NewCT_Picture );
_fg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006das\u002e\u006d\u0069\u0063\u0072\u006fs\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f2\u0030\u0030\u0036\u002f\u0061\u0063\u0074\u0069v\u0065\u0058","\u006f\u0063\u0078",NewOcx );
};